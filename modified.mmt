[[model]]
author: Cellml converter
desc: """
    Mathematical Model Of A Human Atrial Action Potential, 1998
    Noble
    Penny
    Oxford University
    Model Status
    This model has been validated by Penny Noble
    of Oxford University and is known to run in COR and PCEnv.
    ValidateCellML
    verifies this model as valid CellML, but detects unit inconsistencies.
    Model Structure
    The ionic mechanisms underlying many important properties
    of the human atrial action potential are poorly understood.  Using specific
    formulations of the K
    +
    , Na
    +
    and Ca
    2+
    currents based on experimental
    data recorded from human atrial myocytes, along with representations of
    pump, exchange and background currents, Marc Courtemanche, Rafael J.
    Ramirez and Stanley Nattel developed a mathematical model of the action
    potential (see the figure below).
    This mathematical model builds mostly on
    the classical work of Luo and Rudy (see The Luo-Rudy Ventricular Model II
    (dynamic), 1994).  Courtemanche
    et al
    effectively develop a working model
    of the human atrial action potential from the Luo-Rudy model which is based
    on guinea pig ventricular cells.  Their primary goal was to develop a
    useful model of the action potential from which they could gain insights
    into experimental observations made on human atrial cells and tissues and
    make predictions regarding the behaviour of these cells under previously
    untested conditions
    The complete original paper reference is cited below:
    Ionic mechanisms underlying human atrial action potential properties:
    insights from a mathematical model, Marc Courtemanche, Rafael J. Ramirez
    and Stanley Nattel, 1998,
    American Journal of Physiology
    , 275, H301-H321.
    PubMed ID: 9688927
    schematic diagram of a human atrial myocyte
    A schematic
    representation of currents, pumps and exchangers included in the model.
    The cell includes three intracellular compartments: cytoplasm, sarcoplasmic
    reticulum (SR) release compartment [junctional SR (JSR)], and SR uptake
    compartment [network SR (NSR)].
    """
name: courtemanche_1998
# Initial values
membrane.V                                        = -81.18
fast_sodium_current_m_gate.m                      = 0.002908
fast_sodium_current_h_gate.h                      = 0.9649
fast_sodium_current_j_gate.j                      = 0.9775
transient_outward_K_current_oa_gate.oa            = 0.03043
transient_outward_K_current_oi_gate.oi            = 0.9992
ultrarapid_delayed_rectifier_K_current_ua_gate.ua = 0.004966
ultrarapid_delayed_rectifier_K_current_ui_gate.ui = 0.9986
rapid_delayed_rectifier_K_current_xr_gate.xr      = 3.296e-5
slow_delayed_rectifier_K_current_xs_gate.xs       = 0.01869
L_type_Ca_channel_d_gate.d                        = 0.0001367
L_type_Ca_channel_f_gate.f                        = 0.9996
L_type_Ca_channel_f_Ca_gate.f_Ca                  = 0.7755
Ca_release_current_from_JSR_u_gate.u              = 2.35e-112
Ca_release_current_from_JSR_v_gate.v              = 1
Ca_release_current_from_JSR_w_gate.w              = 0.9992
intracellular_ion_concentrations.Na_i             = 11.17
intracellular_ion_concentrations.K_i              = 139
intracellular_ion_concentrations.Ca_i             = 0.0001013
intracellular_ion_concentrations.Ca_up            = 1.488
intracellular_ion_concentrations.Ca_rel           = 1.488


[PRRX1]
prrx1 = 0  # 0 - disabled, 1 - enabled
g_Ca_L_orig = 0.12375 # CACNA1 Ca_L channel
    in [mS/uF]
K_rel_orig = 30 # RYR2 Ryr channel
    in [mS/uF]    
g_Na_orig = 7.8 # SCN5A Nav1.5 channel
    in [mS/uF]
g_Kr_orig =  2.94117649999999994e-2 # KCNH2 Kv11.1 channel
    in [mS/uF]
g_Ks_orig =  1.29411759999999987e-1 # KCNQ1 Kv7.1 channel
    in [mS/uF]


g_Ca_L = (1 + 0.1*prrx1)*g_Ca_L_orig
K_rel = (1 - 0.1*prrx1)*K_rel_orig
g_Na = (1 + 0.4*prrx1)*g_Na_orig
g_Kr = (1 + 0.25*prrx1)*g_Kr_orig
g_Ks = (1 + 0.05*prrx1)*g_Ks_orig

[Ca_buffers]
CMDN_max = 0.05
    in [mM]
CSQN_max = 10
    in [mM]
Ca_CMDN = CMDN_max * intracellular_ion_concentrations.Ca_i / (intracellular_ion_concentrations.Ca_i + Km_CMDN)
    in [mM]
Ca_CSQN = CSQN_max * intracellular_ion_concentrations.Ca_rel / (intracellular_ion_concentrations.Ca_rel + Km_CSQN)
    in [mM]
Ca_TRPN = TRPN_max * intracellular_ion_concentrations.Ca_i / (intracellular_ion_concentrations.Ca_i + Km_TRPN)
    in [mM]
Km_CMDN = 0.00238
    in [mM]
Km_CSQN = 0.8
    in [mM]
Km_TRPN = 0.0005
    in [mM]
TRPN_max = 0.07
    in [mM]

[Ca_leak_current_by_the_NSR]
Ca_up_max = 15
    in [mM]
i_up_leak = leak_factor * Ca_uptake_current_by_the_NSR.I_up_max * intracellular_ion_concentrations.Ca_up / Ca_up_max
    in [mM/ms]
leak_factor = 1
    in [1]

[Ca_release_current_from_JSR_u_gate]
tau_u = 8 [ms]
    in [ms]
dot(u) = (u_infinity - u) / tau_u
    in [1]
u_infinity = (1 + exp(-(intracellular_ion_concentrations.Fn -  3.41749999999999983e-13) / 1.367e-15)) ^ (-1)
    in [1]

[Ca_release_current_from_JSR_v_gate]
tau_v = 1.91 [ms] + 2.09 [ms] * (1 + exp(-(intracellular_ion_concentrations.Fn -  3.41749999999999983e-13) / 1.367e-15)) ^ (-1)
    in [ms]
dot(v) = (v_infinity - v) / tau_v
    in [1]
v_infinity = 1 - (1 + exp(-(intracellular_ion_concentrations.Fn - 6.835e-14) / 1.367e-15)) ^ (-1)
    in [1]

[Ca_release_current_from_JSR_w_gate]
tau_w = piecewise(abs(membrane.V - 7.9 [mV]) < 1e-10 [mV], 6 [ms] * 0.2 / 1.3, 6 [ms] * (1 - exp(-(membrane.V - 7.9 [mV]) / 5 [mV])) / ((1 + 0.3 * exp(-(membrane.V - 7.9 [mV]) / 5 [mV])) * 1 [1/mV] * (membrane.V - 7.9 [mV])))
    in [ms]
dot(w) = (w_infinity - w) / tau_w
    in [1]
w_infinity = 1 - (1 + exp(-(membrane.V - 40 [mV]) / 17 [mV])) ^ (-1)
    in [1]

[Ca_uptake_current_by_the_NSR]
I_up_max = 0.005
    in [mM/ms]
K_up = 0.00092
    in [mM]
i_up = I_up_max / (1 + K_up / intracellular_ion_concentrations.Ca_i)
    in [mM/ms]

[L_type_Ca_channel]
i_Ca_L = common_constants.Cm * PRRX1.g_Ca_L * L_type_Ca_channel_d_gate.d * L_type_Ca_channel_f_gate.f * L_type_Ca_channel_f_Ca_gate.f_Ca * (membrane.V - 65 [mV])
    in [pA]

[L_type_Ca_channel_d_gate]
dot(d) = (d_infinity - d) / tau_d
    in [1]
d_infinity = (1 + exp((membrane.V + 10 [mV]) / -8 [mV])) ^ (-1)
    in [1]
tau_d = piecewise(abs(membrane.V + 10 [mV]) < 1e-10 [mV], 4.579 [ms] / (1 + exp((membrane.V + 10 [mV]) / -6.24 [mV])), (1 - exp((membrane.V + 10 [mV]) / -6.24 [mV])) / (0.035 [1/mV/ms] * (membrane.V + 10 [mV]) * (1 + exp((membrane.V + 10 [mV]) / -6.24 [mV]))))
    in [ms]

[L_type_Ca_channel_f_Ca_gate]
dot(f_Ca) = (f_Ca_infinity - f_Ca) / tau_f_Ca
    in [1]
f_Ca_infinity = (1 + intracellular_ion_concentrations.Ca_i / 0.00035 [mM]) ^ (-1)
    in [1]
tau_f_Ca = 2 [ms]
    in [ms]

[L_type_Ca_channel_f_gate]
dot(f) = (f_infinity - f) / tau_f
    in [1]
f_infinity = exp(-(membrane.V + 28 [mV]) / 6.9 [mV]) / (1 + exp(-(membrane.V + 28 [mV]) / 6.9 [mV]))
    in [1]
tau_f = 9 [ms] * (0.0197 * exp(-0.0337 [1/mV] ^ 2 * (membrane.V + 10 [mV]) ^ 2) + 0.02) ^ (-1)
    in [ms]

[Na_Ca_exchanger_current]
I_NaCa_max = 1600
    in [A/F]
K_mCa = 1.38
    in [mM]
K_mNa = 87.5
    in [mM]
K_sat = 0.1
    in [1]
gamma = 0.35
    in [1]
i_NaCa = common_constants.Cm * I_NaCa_max * (exp(gamma * common_constants.F * membrane.V / (common_constants.R * common_constants.T)) * intracellular_ion_concentrations.Na_i ^ 3 * standard_ionic_concentrations.Ca_o - exp((gamma - 1) * common_constants.F * membrane.V / (common_constants.R * common_constants.T)) * standard_ionic_concentrations.Na_o ^ 3 * intracellular_ion_concentrations.Ca_i) / ((K_mNa ^ 3 + standard_ionic_concentrations.Na_o ^ 3) * (K_mCa + standard_ionic_concentrations.Ca_o) * (1 + K_sat * exp((gamma - 1) * membrane.V * common_constants.F / (common_constants.R * common_constants.T))))
    in [pA]

[background_currents]
E_Ca = common_constants.R * common_constants.T / (2 * common_constants.F) * log(standard_ionic_concentrations.Ca_o / intracellular_ion_concentrations.Ca_i)
    in [mV]
g_B_Ca = 0.001131
    in [mS/uF]
g_B_K = 0
    in [mS/uF]
g_B_Na =  6.74437500000000015e-4
    in [mS/uF]
i_B_Ca = common_constants.Cm * g_B_Ca * (membrane.V - E_Ca)
    in [pA]
i_B_K = common_constants.Cm * g_B_K * (membrane.V - time_independent_potassium_current.E_K)
    in [pA]
i_B_Na = common_constants.Cm * g_B_Na * (membrane.V - fast_sodium_current.E_Na)
    in [pA]

[environment]
time = 0 bind time
    in [ms]

[fast_sodium_current]
E_Na = common_constants.R * common_constants.T / common_constants.F * log(standard_ionic_concentrations.Na_o / intracellular_ion_concentrations.Na_i)
    in [mV]

i_Na = common_constants.Cm * PRRX1.g_Na * fast_sodium_current_m_gate.m ^ 3 * fast_sodium_current_h_gate.h * fast_sodium_current_j_gate.j * (membrane.V - E_Na)
    in [pA]
perc_reduced_inact_for_IpNa = 0
    in [1]
shift_INa_inact = 0
    in [mV]

[fast_sodium_current_h_gate]
alpha_h = piecewise(membrane.V < -40 [mV], 0.135 [mS/uF] * exp((membrane.V + 80 [mV] - fast_sodium_current.shift_INa_inact) / -6.8 [mV]), 0 [mS/uF])
    in [mS/uF]
beta_h = piecewise(membrane.V < -40 [mV], 3.56 [mS/uF] * exp(0.079 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact)) + 310000 [mS/uF] * exp(0.35 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact)), 1 / (0.13 [ms] * (1 + exp((membrane.V + 10.66 [mV] - fast_sodium_current.shift_INa_inact) / -11.1 [mV]))))
    in [mS/uF]
dot(h) = (h_inf - h) / tau_h
    in [1]
h_inf = alpha_h * (1 - fast_sodium_current.perc_reduced_inact_for_IpNa / 100) / (alpha_h + beta_h) + fast_sodium_current.perc_reduced_inact_for_IpNa / 100
    in [1]
tau_h = 1 / (alpha_h + beta_h)
    in [ms]

[fast_sodium_current_j_gate]
alpha_j = piecewise(membrane.V < -40 [mV], (-127140 [1/mV/ms] * exp(0.2444 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact)) - 3.474e-5 [1/mV/ms] * exp(-0.04391 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact))) * (membrane.V + 37.78 [mV]) / (1 + exp(0.311 [1/mV] * (membrane.V + 79.23 [mV] - fast_sodium_current.shift_INa_inact))), 0 [mS/uF])
    in [mS/uF]
beta_j = piecewise(membrane.V < -40 [mV], 0.1212 [mS/uF] * exp(-0.01052 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact)) / (1 + exp(-0.1378 [1/mV] * (membrane.V + 40.14 [mV] - fast_sodium_current.shift_INa_inact))), 0.3 [mS/uF] * exp(-2.535e-7 [1/mV] * (membrane.V - fast_sodium_current.shift_INa_inact)) / (1 + exp(-0.1 [1/mV] * (membrane.V + 32 [mV] - fast_sodium_current.shift_INa_inact))))
    in [mS/uF]
dot(j) = (j_inf - j) / tau_j
    in [1]
j_inf = alpha_j * (1 - fast_sodium_current.perc_reduced_inact_for_IpNa / 100) / (alpha_j + beta_j) + fast_sodium_current.perc_reduced_inact_for_IpNa / 100
    in [1]
tau_j = 1 / (alpha_j + beta_j)
    in [ms]

[fast_sodium_current_m_gate]
alpha_m = piecewise(membrane.V == -47.13 [mV], 3.2 [mS/uF], 0.32 [1/mV/ms] * (membrane.V + 47.13 [mV]) / (1 - exp(-0.1 [1/mV] * (membrane.V + 47.13 [mV]))))
    in [mS/uF]
beta_m = 0.08 [mS/uF] * exp(-membrane.V / 11 [mV])
    in [mS/uF]
dot(m) = (m_inf - m) / tau_m
    in [1]
m_inf = alpha_m / (alpha_m + beta_m)
    in [1]
tau_m = 1 / (alpha_m + beta_m)
    in [ms]

[intracellular_ion_concentrations]
Fn = 1000 [m^3*s/mol (0.001)] * (1e-15 [1/m^3 (1000000000000000000)] * intracellular_ion_concentrations.V_rel * i_rel - 1e-15 [1/m^3 (1000000000000000000)] / (2 * common_constants.F) * (0.5 * L_type_Ca_channel.i_Ca_L - 0.2 * Na_Ca_exchanger_current.i_NaCa))
    in [1]

i_rel = PRRX1.K_rel * Ca_release_current_from_JSR_u_gate.u ^ 2 * Ca_release_current_from_JSR_v_gate.v * Ca_release_current_from_JSR_w_gate.w * (intracellular_ion_concentrations.Ca_rel - intracellular_ion_concentrations.Ca_i)
    in [mM/ms]

B1 = (2 * Na_Ca_exchanger_current.i_NaCa - (sarcolemmal_calcium_pump_current.i_CaP + L_type_Ca_channel.i_Ca_L + background_currents.i_B_Ca)) / (2 * V_i * common_constants.F) + (V_up * (Ca_leak_current_by_the_NSR.i_up_leak - Ca_uptake_current_by_the_NSR.i_up) + i_rel * V_rel) / V_i
    in [mM/ms]
B2 = 1 + Ca_buffers.TRPN_max * Ca_buffers.Km_TRPN / (Ca_i + Ca_buffers.Km_TRPN) ^ 2 + Ca_buffers.CMDN_max * Ca_buffers.Km_CMDN / (Ca_i + Ca_buffers.Km_CMDN) ^ 2
    in [1]
dot(Ca_i) = B1 / B2
    in [mM]
dot(Ca_rel) = (transfer_current_from_NSR_to_JSR.i_tr - i_rel) * (1 + Ca_buffers.CSQN_max * Ca_buffers.Km_CSQN / (Ca_rel + Ca_buffers.Km_CSQN) ^ 2) ^ (-1)
    in [mM]
dot(Ca_up) = Ca_uptake_current_by_the_NSR.i_up - (Ca_leak_current_by_the_NSR.i_up_leak + transfer_current_from_NSR_to_JSR.i_tr * V_rel / V_up)
    in [mM]
dot(K_i) = conc_clamp * ((2 * sodium_potassium_pump.i_NaK - (time_independent_potassium_current.i_K1 + transient_outward_K_current.i_to + ultrarapid_delayed_rectifier_K_current.i_Kur + rapid_delayed_rectifier_K_current.i_Kr + slow_delayed_rectifier_K_current.i_Ks + background_currents.i_B_K)) / (V_i * common_constants.F))
    in [mM]
dot(Na_i) = conc_clamp * (-3 * sodium_potassium_pump.i_NaK - (3 * Na_Ca_exchanger_current.i_NaCa + background_currents.i_B_Na + fast_sodium_current.i_Na)) / (V_i * common_constants.F)
    in [mM]
V_cell = 20100
    in [um^3]
V_i = V_cell * 0.68
    in [um^3]
V_rel = 0.0048 * V_cell
    in [um^3]
V_up = 0.0552 * V_cell
    in [um^3]
conc_clamp = 1
    in [1]

[common_constants]
Cm = 100
    in [pF]
F = 96.4867
    in [C/mmol]
R = 8.3143
    in [J/mol/K]
T = 310
    in [K]

[membrane]
dot(V) = -(fast_sodium_current.i_Na + time_independent_potassium_current.i_K1 + transient_outward_K_current.i_to + ultrarapid_delayed_rectifier_K_current.i_Kur + rapid_delayed_rectifier_K_current.i_Kr + slow_delayed_rectifier_K_current.i_Ks + background_currents.i_B_Na + background_currents.i_B_Ca + sodium_potassium_pump.i_NaK + sarcolemmal_calcium_pump_current.i_CaP + Na_Ca_exchanger_current.i_NaCa + L_type_Ca_channel.i_Ca_L + i_st) / common_constants.Cm
    in [mV]
    label membrane_potential
stim_amplitude = -2000
    in [pA]
pacing = 0 bind pace
i_st = stim_amplitude * pacing

[rapid_delayed_rectifier_K_current]
g_Kr =  2.94117649999999994e-2
    in [mS/uF]
i_Kr = common_constants.Cm * g_Kr * rapid_delayed_rectifier_K_current_xr_gate.xr * (membrane.V - time_independent_potassium_current.E_K) / (1 + exp((membrane.V + 15 [mV]) / 22.4 [mV]))
    in [pA]

[rapid_delayed_rectifier_K_current_xr_gate]
alpha_xr = piecewise(abs(membrane.V + 14.1 [mV]) < 1e-10 [mV], 0.0015 [mS/uF], 0.0003 [1/mV/ms] * (membrane.V + 14.1 [mV]) / (1 - exp((membrane.V + 14.1 [mV]) / -5 [mV])))
    in [mS/uF]
beta_xr = piecewise(abs(membrane.V - 3.3328 [mV]) < 1e-10 [mV],  3.78361180000000004e-4 [mS/uF],  7.38980000000000030e-5 [1/mV/ms] * (membrane.V - 3.3328 [mV]) / (exp((membrane.V - 3.3328 [mV]) / 5.1237 [mV]) - 1))
    in [mS/uF]
tau_xr = (alpha_xr + beta_xr) ^ (-1)
    in [ms]
dot(xr) = (xr_infinity - xr) / tau_xr
    in [1]
xr_infinity = (1 + exp((membrane.V + 14.1 [mV]) / -6.5 [mV])) ^ (-1)
    in [1]

[sarcolemmal_calcium_pump_current]
i_CaP = common_constants.Cm * i_CaP_max * intracellular_ion_concentrations.Ca_i / (0.0005 [mM] + intracellular_ion_concentrations.Ca_i)
    in [pA]
i_CaP_max = 0.275
    in [A/F]

[slow_delayed_rectifier_K_current]
g_Ks =  1.29411759999999987e-1
    in [mS/uF]
i_Ks = common_constants.Cm * g_Ks * slow_delayed_rectifier_K_current_xs_gate.xs ^ 2 * (membrane.V - time_independent_potassium_current.E_K)
    in [pA]

[slow_delayed_rectifier_K_current_xs_gate]
alpha_xs = piecewise(abs(membrane.V - 19.9 [mV]) < 1e-10 [mV], 0.00068 [mS/uF], 4e-5 [1/mV/ms] * (membrane.V - 19.9 [mV]) / (1 - exp((membrane.V - 19.9 [mV]) / -17 [mV])))
    in [mS/uF]
beta_xs = piecewise(abs(membrane.V - 19.9 [mV]) < 1e-10 [mV], 0.000315 [mS/uF], 3.5e-5 [1/mV/ms] * (membrane.V - 19.9 [mV]) / (exp((membrane.V - 19.9 [mV]) / 9 [mV]) - 1))
    in [mS/uF]
tau_xs = 0.5 * (alpha_xs + beta_xs) ^ (-1)
    in [ms]
dot(xs) = (xs_infinity - xs) / tau_xs
    in [1]
xs_infinity = (1 + exp((membrane.V - 19.9 [mV]) / -12.7 [mV])) ^ (-0.5)
    in [1]

[sodium_potassium_pump]
Km_K_o = 1.5
    in [mM]
Km_Na_i = 10
    in [mM]
f_NaK = (1 + 0.1245 * exp(-0.1 * common_constants.F * membrane.V / (common_constants.R * common_constants.T)) + 0.0365 * sigma * exp(-common_constants.F * membrane.V / (common_constants.R * common_constants.T))) ^ (-1)
    in [1]
i_NaK = common_constants.Cm * i_NaK_max * f_NaK * 1 / (1 + (Km_Na_i / intracellular_ion_concentrations.Na_i) ^ 1.5) * standard_ionic_concentrations.K_o / (standard_ionic_concentrations.K_o + Km_K_o)
    in [pA]
i_NaK_max =  5.99338739999999981e-1
    in [A/F]
sigma = 1 / 7 * (exp(standard_ionic_concentrations.Na_o / 67.3 [mM]) - 1)
    in [1]

[standard_ionic_concentrations]
Ca_o = 1.8
    in [mM]
K_o = 5.4
    in [mM]
Na_o = 140
    in [mM]

[time_independent_potassium_current]
E_K = common_constants.R * common_constants.T / common_constants.F * log(standard_ionic_concentrations.K_o / intracellular_ion_concentrations.K_i)
    in [mV]
g_K1 = 0.09
    in [mS/uF]
i_K1 = common_constants.Cm * g_K1 * (membrane.V - E_K) / (1 + exp(0.07 [1/mV] * (membrane.V + 80 [mV])))
    in [pA]

[transfer_current_from_NSR_to_JSR]
i_tr = (intracellular_ion_concentrations.Ca_up - intracellular_ion_concentrations.Ca_rel) / tau_tr
    in [mM/ms]
tau_tr = 180
    in [ms]

[transient_outward_K_current]
K_Q10 = 3
    in [1]
g_to = 0.1652
    in [mS/uF]
i_to = common_constants.Cm * g_to * transient_outward_K_current_oa_gate.oa ^ 3 * transient_outward_K_current_oi_gate.oi * (membrane.V - time_independent_potassium_current.E_K)
    in [pA]

[transient_outward_K_current_oa_gate]
alpha_oa = 0.65 [mS/uF] * (exp((membrane.V - -10 [mV]) / -8.5 [mV]) + exp((membrane.V - -10 [mV] - 40 [mV]) / -59 [mV])) ^ (-1)
    in [mS/uF]
beta_oa = 0.65 [mS/uF] * (2.5 + exp((membrane.V - -10 [mV] + 72 [mV]) / 17 [mV])) ^ (-1)
    in [mS/uF]
dot(oa) = (oa_infinity - oa) / tau_oa
    in [1]
oa_infinity = (1 + exp((membrane.V - -10 [mV] + 10.47 [mV]) / -17.54 [mV])) ^ (-1)
    in [1]
tau_oa = (alpha_oa + beta_oa) ^ (-1) / transient_outward_K_current.K_Q10
    in [ms]

[transient_outward_K_current_oi_gate]
alpha_oi = (18.53 [ms] + 1 [ms] * exp((membrane.V - -10 [mV] + 103.7 [mV]) / 10.95 [mV])) ^ (-1)
    in [mS/uF]
beta_oi = (35.56 [ms] + 1 [ms] * exp((membrane.V - -10 [mV] - 8.74 [mV]) / -7.44 [mV])) ^ (-1)
    in [mS/uF]
dot(oi) = (oi_infinity - oi) / tau_oi
    in [1]
oi_infinity = (1 + exp((membrane.V - -10 [mV] + 33.1 [mV]) / 5.3 [mV])) ^ (-1)
    in [1]
tau_oi = (alpha_oi + beta_oi) ^ (-1) / transient_outward_K_current.K_Q10
    in [ms]

[ultrarapid_delayed_rectifier_K_current]
g_Kur = 0.005 [mS/uF] + 0.05 [mS/uF] / (1 + exp((membrane.V - 15 [mV]) / -13 [mV]))
    in [mS/uF]
i_Kur = common_constants.Cm * g_Kur * ultrarapid_delayed_rectifier_K_current_ua_gate.ua ^ 3 * ultrarapid_delayed_rectifier_K_current_ui_gate.ui * (membrane.V - time_independent_potassium_current.E_K)
    in [pA]

[ultrarapid_delayed_rectifier_K_current_ua_gate]
alpha_ua = 0.65 [mS/uF] * (exp((membrane.V - -10 [mV]) / -8.5 [mV]) + exp((membrane.V - -10 [mV] - 40 [mV]) / -59 [mV])) ^ (-1)
    in [mS/uF]
beta_ua = 0.65 [mS/uF] * (2.5 + exp((membrane.V - -10 [mV] + 72 [mV]) / 17 [mV])) ^ (-1)
    in [mS/uF]
tau_ua = (alpha_ua + beta_ua) ^ (-1) / transient_outward_K_current.K_Q10
    in [ms]
dot(ua) = (ua_infinity - ua) / tau_ua
    in [1]
ua_infinity = (1 + exp((membrane.V - -10 [mV] + 20.3 [mV]) / -9.6 [mV])) ^ (-1)
    in [1]

[ultrarapid_delayed_rectifier_K_current_ui_gate]
alpha_ui = (21 [ms] + 1 [ms] * exp((membrane.V - -10 [mV] - 195 [mV]) / -28 [mV])) ^ (-1)
    in [mS/uF]
beta_ui = 1 [mS/uF] / exp((membrane.V - -10 [mV] - 168 [mV]) / -16 [mV])
    in [mS/uF]
tau_ui = (alpha_ui + beta_ui) ^ (-1) / transient_outward_K_current.K_Q10
    in [ms]
dot(ui) = (ui_infinity - ui) / tau_ui
    in [1]
ui_infinity = (1 + exp((membrane.V - -10 [mV] - 109.45 [mV]) / 27.48 [mV])) ^ (-1)
    in [1]

[[protocol]]
# Level  Start    Length   Period   Multiplier
1.0      100.0    2.0      1000.0   0

[[script]]
import matplotlib.pyplot as plt
import myokit
import numpy as np
import time
from os.path import join
print(myokit.DIR_CFUNC)

IMAGE_DIR = 'imgs/'
IMAGE_FORMAT = '.png'

# Get model and protocol, create simulation
m = get_model()
p = get_protocol()

# MOD
m.set_value('PRRX1.prrx1', 1)

# Create a simulation
s = myokit.Simulation(m, p, apd_var='membrane.V')

# Pre-pace for 99 beats
cl = 1000  # This should correspond to the cycle length of the protocol!
s.pre(9 * cl)

# Get APD threshold level
# In this case, we'll define it as 90% of the resting membrane potential
# after pre-pacing (but not as a function of max(V)).
indice = m.get('membrane.V').indice()
vt = 0.9 * s.state()[indice]

# Run, collect APDs
log, apds = s.run(5 * 1000, apd_threshold=vt)

# Show results
title = f'PRRX1 = {m.value("PRRX1.prrx1")} After changed g_Ks'
plt.figure()
plt.title(title)
plt.plot(log['environment.time'], log['membrane.V'])
for i, start in enumerate(apds['start']):
    duration = apds['duration'][i]
    plt.arrow(start, vt, duration, 0, head_width=5, head_length=100,
        length_includes_head=True)
    plt.text(start + 40, vt-10, str(int(duration)) + ' ms')
plt.show()
plt.savefig(join(IMAGE_DIR, title + IMAGE_FORMAT))

